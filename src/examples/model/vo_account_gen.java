/* vo_account_gen 
 *
 * THE FOLLOWING CODE IS AUTO GENERATED BY GENDB SCRIPT 
 * !!!!!!!!!!!!  DO NOT MODIFY THIS FILE !!!!!!!!!!!
 */
package com.qkernel.examples.model;

import com.qkernel.*;

@SuppressWarnings({"unchecked", "fallthrough", "serial" })
/************************************************************
 * A ValueObject for the db table account
 * @author Initially created by ValueObjectBuilder
 * @version $Revision$ 
 ************************************************************
 */
public abstract class vo_account_gen extends CloneableObject
{

    /** accountId database type:INT */
    public int accountId=0;

    /** accountCompany database type:VARCHAR */
    public String accountCompany="";

    /** accountAddress database type:VARCHAR */
    public String accountAddress="";

    /** accountCity database type:VARCHAR */
    public String accountCity="";

    /** accountState database type:VARCHAR */
    public String accountState="";

    /** accountCountry database type:VARCHAR */
    public String accountCountry="";

    /** accountPhone database type:VARCHAR */
    public String accountPhone="";

    /** accountFax database type:VARCHAR */
    public String accountFax="";

    /** accountEmail database type:VARCHAR */
    public String accountEmail="";

    /** accountContactName database type:VARCHAR */
    public String accountContactName="";

    /**
     * Gets a string representation of the requested field, or an empty string if not available
     * @param field - field name being requested (matching defined field name in the entity object)
     * @return String representation of the field requested
     */
    public String getString(String field)
    {
        if(field.equals(eo_account.FIELD_ACCOUNTID)) {return Integer.toString(accountId);}
        if(field.equals(eo_account.FIELD_ACCOUNTCOMPANY)) {return accountCompany==null ? "" : accountCompany;}
        if(field.equals(eo_account.FIELD_ACCOUNTADDRESS)) {return accountAddress==null ? "" : accountAddress;}
        if(field.equals(eo_account.FIELD_ACCOUNTCITY)) {return accountCity==null ? "" : accountCity;}
        if(field.equals(eo_account.FIELD_ACCOUNTSTATE)) {return accountState==null ? "" : accountState;}
        if(field.equals(eo_account.FIELD_ACCOUNTCOUNTRY)) {return accountCountry==null ? "" : accountCountry;}
        if(field.equals(eo_account.FIELD_ACCOUNTPHONE)) {return accountPhone==null ? "" : accountPhone;}
        if(field.equals(eo_account.FIELD_ACCOUNTFAX)) {return accountFax==null ? "" : accountFax;}
        if(field.equals(eo_account.FIELD_ACCOUNTEMAIL)) {return accountEmail==null ? "" : accountEmail;}
        if(field.equals(eo_account.FIELD_ACCOUNTCONTACTNAME)) {return accountContactName==null ? "" : accountContactName;}
        return "";
    }

    /**
     * Sets the field value if it is available in the given Hashtable
     * @param values - list of fields and their associated values to be set
     */
    public void setFields(QMessage values)
    {
        if(values.containsKey(eo_account.FIELD_ACCOUNTID)) { accountId = values.getInt(eo_account.FIELD_ACCOUNTID);}
        if(values.containsKey(eo_account.FIELD_ACCOUNTCOMPANY)) { accountCompany = values.getString(eo_account.FIELD_ACCOUNTCOMPANY);}
        if(values.containsKey(eo_account.FIELD_ACCOUNTADDRESS)) { accountAddress = values.getString(eo_account.FIELD_ACCOUNTADDRESS);}
        if(values.containsKey(eo_account.FIELD_ACCOUNTCITY)) { accountCity = values.getString(eo_account.FIELD_ACCOUNTCITY);}
        if(values.containsKey(eo_account.FIELD_ACCOUNTSTATE)) { accountState = values.getString(eo_account.FIELD_ACCOUNTSTATE);}
        if(values.containsKey(eo_account.FIELD_ACCOUNTCOUNTRY)) { accountCountry = values.getString(eo_account.FIELD_ACCOUNTCOUNTRY);}
        if(values.containsKey(eo_account.FIELD_ACCOUNTPHONE)) { accountPhone = values.getString(eo_account.FIELD_ACCOUNTPHONE);}
        if(values.containsKey(eo_account.FIELD_ACCOUNTFAX)) { accountFax = values.getString(eo_account.FIELD_ACCOUNTFAX);}
        if(values.containsKey(eo_account.FIELD_ACCOUNTEMAIL)) { accountEmail = values.getString(eo_account.FIELD_ACCOUNTEMAIL);}
        if(values.containsKey(eo_account.FIELD_ACCOUNTCONTACTNAME)) { accountContactName = values.getString(eo_account.FIELD_ACCOUNTCONTACTNAME);}
    }

}

